{"version":3,"file":"public/js/app.js","sources":["app/app.coffee","app/authentication/authentication.coffee","app/filters/capitalize.coffee","app/todo/todo.coffee"],"names":[],"mappings":"AAAA;;;AAEA,CAFA,CAE6B,CAA7B,CAA6B,EAAvB,CAAO,EAAgB;;AAE7B,CAJA,EAIG,GAAH;EACoB,CAAlB,MACC,IAAD,EAFS,EAET,EAFS;CAIP,CACa,CADb,WACE;CAAW,CAAa,IAAb;CACX,KAFF;CAEa,CAAY,CAAZ;CAFb;AAKA,CALA,GAKA,GAAqC,CAAR,KAAT,KAAyB;CAL7C,CAQsD,EAAtD,QAA0B,CAAb,MAAb;CAEoB,SAApB,SAAmB;CACjB,CAAY,EAAZ;CAbJ,KAYE;CAdO,EAET;CANF,CAIA;;AAkBA,CAtBA,CAsBkC,CAA/B,IAAH;EAEE,CADA,MACC,CAAD,EAFgC;CAG9B,EAAqB,CAArB,MAAU;WACV;EAAS,IAAT,GAAU;AAER,UAAU;CAFH,cAGP;CAHF,MAAS;CAAT,CAIU,IAAV,GAAW;AAET,UAAU;CAFF,cAGR;CAPF,MAIU;CAJV,CAQe,IAAf,GAAgB,IAAhB;AAEE,UAAU;CAFG,cAGb;CAXF,MAQe;CAVjB;CAFgC,EAEhC;CAxBF,CAsBA;;AAkBA,CAxCA,CAwCiC,CAA9B,IAAH;EACgB,CAAd,KACA,CAAC,CAF8B;CAG7B,EAAoB,CAApB,MAAU;WACV;EAAe,IAAf,GAAgB,IAAhB;CACE;GACE,EADF;CACE,CAAQ,IAAR,GAAiB,CAAjB;EACS,EADT,GACA,EAAkB,CAAlB;CAFF;IAGA,EAAiB,EAAjB,EAAU;CAHV,EAIS,KAAT,CAAS;CACI,IAAX,CAAiB,IAAP,OAAV;CADF,CAEE,EAFF,KAAS;CALI,cAQb;CARF,MAAe;CAFjB;CAF+B,EAE/B;CA1CF,CAwCA;A,CCxCA;;;AAEA,CAFA,CAE6C,CAAtC,CAAP,EAAO,CAAO,EAA+B,YAAtC;;AAEP,CAJA,GAII,EAAJ;EAEE,CADA,MACC,KAAD,EAFU;CAKL,CAAwB,EAD3B,UACE,GADF;CAC2B,CAAa,IAAb;EAA+D,IAAZ,oBAAnD;CAH7B,KAEE;CAJQ,EAEV;CANF,CAIA;;AASA,CAbA,CAa4C,EAAxC,MAAJ;EACY,CAAV,EACA,EAF0C,EAEzC,CAFyC;CAGxC;GAAkB,CAAlB,EAAM,EAAN;GACiB,CAAjB,GAAiB,EAAC,KAAlB;CACE,OAAe;CACN,OAAT,CAAS,IAAT;CACS,IAAP,CAAM,EAAS,OAAf;CADF,CAEE,EAFF,GAAS;CAHX,IACiB;CADjB,EAOe,CAAf,EAAM,GAAS;CAEX,IADF;CACE,CAAQ,GAAR;EACK,CAAL,IADA,CACA;CACF,MAHA;CARF,IAOe;CAMR,EAAS,GAAV,GAAU,EAAhB;CAEI,IADF;CACE,CAAQ,GAAR;EACK,CAAL;CACF,MAHA;CAfJ,IAckB;CAhBwB,EAE1C;CAfF,CAaA;A,CCbA,CAAI,CAAqB,CAAtB,GAAH,GAAyB,GAAzB;GACE;CACE;CAAM,EAA0B,EAA3B,CAAL;KADF;CADuB,EACvB;CADuB;A,CCAzB;;;AAEA,CAFA,CAEmC,CAA5B,CAAP,EAAO,CAAO,EAAqB,EAA5B,CAA4B;;AAEnC,CAJA,GAII,EAAJ;EAEE,CADA,MACC,KAAD,EAFU;CAKL,CAAc,EADjB,UACE;CAAe,CAAa,IAAb;EAA2C,IAAZ,UAA/B;CAHnB,KAEE;CAJQ,EAEV;CANF,CAIA;;AASA,CAbA,CAakC,EAA9B,MAAJ;EACY,CAAV,GACA,EAFgC,CAE/B,CAF+B;CAG9B,EAAyB,CAAzB,EAAM,GAAmB,MAAzB;CACW,EAAM,EAAf,GAAQ,CAAQ,IAAhB;CACS,EAAW,GAAZ,EAAN;CADF,MAAe;CADjB,IAAyB;CAAzB,EAI4B,CAA5B,CAJA,CAIM,YAAN;CAJA,EAME,CADF,EAAM,CAAN;CACE,CAAO,GAAP;EACS,IAAT;CAPF;GASoB,CAApB,EAAM,GAAc,CAApB;CACE,EAA4B,CAA5B;CACS,CAAqB,EAA9B,EAAoB,CAApB,CAAQ,CAAsB,IAA9B;CACE,EACE,GADI,CAAN;CACE,CAAO,GAAP;EACS,KAAT;CAFF;GAG4B,EAH5B,CAGM,EAAN;CACO,KAAD,SAAN;CALF,MAA8B;CAXhC,IASoB;CATpB,EAkBoB,CAApB,EAAM,EAAc,CAAC,CAArB;CACW,OAAD,KAAR;CACE;EACA,MAFF,CAEE;CACO,KAAD,SAAN;CAHF,MAEE;CArBJ,IAkBoB;CAMb,KAAD,KAAN;CA3B8B,EAEhC;CAfF,CAaA;;AA8BA,CA3CA,CA2CyB,EAArB,GAAJ;EAEE,CADA,MACC,EAFsB;CAGX,QAAV;CAHqB,EAEvB;CA7CF,CA2CA;A","sourcesContent":["'use strict'\n\napp = angular.module 'kewl', ['ng', 'ngRoute', 'ui.bootstrap', 'hljs', 'kewl.todo', 'kewl.authentication']\n\napp.config [\n  '$routeProvider', '$locationProvider', '$httpProvider', 'hljsServiceProvider'\n  ($routeProvider, $locationProvider, $httpProvider, hljsServiceProvider) ->\n\n    $routeProvider\n      .when('/', templateUrl: 'home.html')\n      .otherwise(redirectTo: '/')\n\n    # Allow cross-domain http requests\n    delete $httpProvider.defaults.headers.common['X-Requested-With']\n\n    # Register intercetors\n    $httpProvider.interceptors.push 'loadingInterceptor', 'errorsInterceptor'\n\n    hljsServiceProvider.setOptions\n      tabReplace: '  '\n]\n\napp.factory 'loadingInterceptor', [\n  '$rootScope'\n  ($rootScope) ->\n    $rootScope.loading = 0\n    request: (request) ->\n      # Do something when sending the request\n      $rootScope.loading++\n      request\n    response: (response) ->\n      # Do something when recieving the response\n      $rootScope.loading--\n      response\n    responseError: (rejection) ->\n      # Do something when recieving an error\n      $rootScope.loading--\n      rejection\n]\n\napp.factory 'errorsInterceptor', [\n  '$rootScope', '$timeout'\n  ($rootScope, $timeout) ->\n    $rootScope.errors = []\n    responseError: (rejection) ->\n      error =\n        status: rejection.status\n        message: rejection.data\n      $rootScope.errors.push error\n      $timeout ->\n        $rootScope.errors.shift()\n      , 5000\n      rejection\n]\n","'use strict'\n\nauth = angular.module 'kewl.authentication', ['ng', 'ngRoute', 'ui.bootstrap']\n\nauth.config [\n  '$routeProvider'\n  ($routeProvider) ->\n\n    $routeProvider\n      .when '/authentication', templateUrl: 'authentication/authentication.html', controller: 'authenticationController'\n\n]\n\nauth.controller 'authenticationController', [\n  '$scope', '$http', '$timeout'\n  ($scope, $http, $timeout) ->\n    $scope.messages = []\n    displayMessage = (message) ->\n      $scope.messages.push message\n      $timeout ->\n        $scope.messages.shift()\n      , 2500\n\n    $scope.login = ->\n      $http\n        method: 'GET'\n        url: 'login'\n      .success displayMessage\n\n    $scope.logout = ->\n      $http\n        method: 'GET'\n        url: 'logout'\n      .success displayMessage\n]\n","app.filter 'capitalize', ->\n  (input) ->\n    input.charAt(0).toUpperCase() + input.slice(1) if input\n","'use strict'\n\ntodo = angular.module 'kewl.todo', ['ng', 'ngRoute', 'ui.bootstrap', 'ngResource']\n\ntodo.config [\n  '$routeProvider'\n  ($routeProvider) ->\n\n    $routeProvider\n      .when '/todo', templateUrl: 'todo/todo.html', controller: 'toDoController'\n\n]\n\ntodo.controller 'toDoController', [\n  '$scope', 'ToDoList'\n  ($scope, ToDoList) ->\n    $scope.refreshToDoList = ->\n      ToDoList.query (response) ->\n        $scope.toDoList = response\n\n    $scope.sendButtonDisabled = false\n    $scope.newToDo =\n      title: \"\"\n      details: \"\"\n\n    $scope.addNewToDo = ->\n      $scope.sendButtonDisabled = true\n      ToDoList.save $scope.newToDo, ->\n        $scope.newToDo =\n          title: \"\"\n          details: \"\"\n        $scope.sendButtonDisabled = false\n        $scope.refreshToDoList()\n\n    $scope.markAsDone = (toDoItem) ->\n      ToDoList.delete\n        id: toDoItem.id\n      , ->\n        $scope.refreshToDoList()\n\n    $scope.refreshToDoList() # Load the to-do list for the first time\n]\n\ntodo.factory 'ToDoList', [\n  '$resource'\n  ($resource) ->\n    $resource 'todo/:id'\n]\n"]}